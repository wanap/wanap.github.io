<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://wananpei.me/"/>
  <updated>2016-09-29T04:37:06.224Z</updated>
  <id>http://wananpei.me/</id>
  
  <author>
    <name>wananpei</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>git-remote</title>
    <link href="http://wananpei.me/2016/09/29/git-remote/"/>
    <id>http://wananpei.me/2016/09/29/git-remote/</id>
    <published>2016-09-29T04:35:17.000Z</published>
    <updated>2016-09-29T04:37:06.224Z</updated>
    
    <content type="html"><![CDATA[<h2 id="git远程命令"><a href="#git远程命令" class="headerlink" title="git远程命令"></a>git远程命令</h2><p>  git remote [-v]  列出所有远程主机</p>
<p>  git remote add &lt;主机名&gt; <url> 添加一个新的远程 Git 仓库</url></p>
<p>  git remote rm &lt;主机名&gt; <url> 用于删除远程主机</url></p>
<a id="more"></a>
<h2 id="从远程主机更新"><a href="#从远程主机更新" class="headerlink" title="从远程主机更新"></a>从远程主机更新</h2><pre><code>git fetch &lt;主机名&gt; &lt;分支名&gt;
</code></pre><p>然后就可以使用<code>git merge</code>命令或<code>git rebase</code>命令，在本地分支上合并远程分支  </p>
<pre><code>#在当前分支上合并orgin主机的master分支
git merge origin/master 或 git rebase origin/master  
</code></pre><p>或者直接使用git pull命令，本地分支名不写代表合并到本地当前分支  </p>
<pre><code>git pull &lt;远程主机名&gt; &lt;远程分支名&gt;:&lt;本地分支名&gt; 
</code></pre><p><code>git fetch</code> 是将更新取回本地，需要再<code>git merge</code>， 而<code>git pull</code>是一步到位，取回更新并合并</p>
<h2 id="将本地代码推送到远程主机"><a href="#将本地代码推送到远程主机" class="headerlink" title="将本地代码推送到远程主机"></a>将本地代码推送到远程主机</h2><pre><code>git push &lt;远程主机名&gt; &lt;本地分支名&gt;:&lt;远程分支名&gt;
</code></pre><p>创建一个远程分支</p>
<pre><code>git push &lt;远程主机名&gt; &lt;本地分支名&gt;:&lt;新远程分支名&gt;
</code></pre><p>删除指定的远程分支</p>
<pre><code>git push origin --delete &lt;远程分支名&gt;
或者推送一个空的本地分支到远程分支
git push origin :&lt;远程分支名&gt;
</code></pre><h2 id="如何避免每次输入密码"><a href="#如何避免每次输入密码" class="headerlink" title="如何避免每次输入密码"></a>如何避免每次输入密码</h2><p>如果不想在每一次推送时都输入用户名与密码，你可以设置一个 “credential cache”。 最简单的方式就是将其保存在内存中几分钟，可以简单地运行 git config –global credential.helper cache 来设置它。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;git远程命令&quot;&gt;&lt;a href=&quot;#git远程命令&quot; class=&quot;headerlink&quot; title=&quot;git远程命令&quot;&gt;&lt;/a&gt;git远程命令&lt;/h2&gt;&lt;p&gt;  git remote [-v]  列出所有远程主机&lt;/p&gt;
&lt;p&gt;  git remote add &amp;lt;主机名&amp;gt; &lt;url&gt; 添加一个新的远程 Git 仓库&lt;/p&gt;
&lt;p&gt;  git remote rm &amp;lt;主机名&amp;gt; &lt;url&gt; 用于删除远程主机&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://wananpei.me/2016/09/29/hello-world/"/>
    <id>http://wananpei.me/2016/09/29/hello-world/</id>
    <published>2016-09-29T03:49:40.999Z</published>
    <updated>2016-09-29T05:36:42.162Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<a id="more"></a>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>git-commond</title>
    <link href="http://wananpei.me/2016/09/28/git-commond/"/>
    <id>http://wananpei.me/2016/09/28/git-commond/</id>
    <published>2016-09-28T10:40:57.000Z</published>
    <updated>2016-09-29T05:36:43.806Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Git原理："><a href="#Git原理：" class="headerlink" title="Git原理："></a>Git原理：</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">        push &lt;-           -&gt; checkout</div><div class="line">Remote------------Repository-------------------workspace</div><div class="line">       -&gt; clone    |-------------Index---------|</div><div class="line">                       commit &lt;-     add &lt;-</div></pre></td></tr></table></figure>
<a id="more"></a>
<h3 id="名词解释："><a href="#名词解释：" class="headerlink" title="名词解释："></a>名词解释：</h3><p>Workspace：工作区</p>
<p>Index / Stage：暂存区</p>
<p>Repository：仓库区（或本地仓库）</p>
<p>Remote：远程仓库</p>
<h3 id="Git常用命令："><a href="#Git常用命令：" class="headerlink" title="Git常用命令："></a>Git常用命令：</h3><p>1.如果要上传到GitHub，要先在GitHub上新建一个Repository，然后git clone [url] 到本地</p>
<p>2.添加或删除 文件到 暂存区</p>
<pre><code># 添加当前目录的所有文件到暂存区    git add .
# 删除工作区文件，并且将这次删除放入暂存区     git rm [file1] [file2]
# 停止追踪指定文件，但该文件会保留在工作区     git rm --cached [file]
</code></pre><p>3.提交 暂存区 到 仓库区，git commit -m [message]</p>
<p>4.上传当前分支到远程仓库，git push</p>
<p>5.branch分支</p>
<pre><code># 新建一个分支，但依然停留在当前分支  git branch [branch-name]
# 切换到指定分支，并更新工作区        git checkout [branch-name]
# 合并指定分支到当前分支             git merge [branch]
# 删除分支                          git branch -d [branch-name]
</code></pre><p>6.其他常用命令</p>
<pre><code># 显示有变更的文件             git status
# 显示当前分支的版本历史        git log
# 在当前目录新建一个Git代码库   git init
</code></pre><h3 id="Git工作流："><a href="#Git工作流：" class="headerlink" title="Git工作流："></a>Git工作流：</h3><pre><code>1.使用git init命令新建Git代码库,然后git remote add origin &lt;url&gt;关联到repository
2.使用git branch dev 新建一个dev分支，切换到dev分支进行开发
3.git add 添加改动的文件，然后 git commit提交改动
4.切回到master分支，git merge dev 合并改动到主分支
5.git push提交到远程仓库
</code></pre><h3 id="新建一个repository后，你可以"><a href="#新建一个repository后，你可以" class="headerlink" title="新建一个repository后，你可以"></a>新建一个repository后，你可以</h3><h5 id="create-a-new-repository-on-the-command-line"><a href="#create-a-new-repository-on-the-command-line" class="headerlink" title="create a new repository on the command line"></a>create a new repository on the command line</h5><pre><code>echo &quot;# hexo&quot; &gt;&gt; README.md
git init
git add README.md
git commit -m &quot;first commit&quot;
git remote add origin https://github.com/wanap/hexo.git
git push -u origin master
</code></pre><h5 id="or-push-an-existing-repository-from-the-command-line"><a href="#or-push-an-existing-repository-from-the-command-line" class="headerlink" title="or push an existing repository from the command line"></a>or push an existing repository from the command line</h5><pre><code>git remote add origin https://github.com/wanap/hexo.git
git push -u origin master
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Git原理：&quot;&gt;&lt;a href=&quot;#Git原理：&quot; class=&quot;headerlink&quot; title=&quot;Git原理：&quot;&gt;&lt;/a&gt;Git原理：&lt;/h3&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        push &amp;lt;-           -&amp;gt; checkout&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Remote------------Repository-------------------workspace&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       -&amp;gt; clone    |-------------Index---------|&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                       commit &amp;lt;-     add &amp;lt;-&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="技术" scheme="http://wananpei.me/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="git" scheme="http://wananpei.me/tags/git/"/>
    
  </entry>
  
</feed>
